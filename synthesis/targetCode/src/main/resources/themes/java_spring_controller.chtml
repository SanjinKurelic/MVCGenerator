package {$rootNamespace}.controller;

import {$rootNamespace}.entity.{$entityName};
import {$rootNamespace}.service.{$entityName}Service;
{% if ($idComposite) %}
import {$rootNamespace}.entity.{$entityName}Id;
{% endif %}
{% include java_spring_component_extra_import %}
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.validation.Valid;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/api/{$entityNameLowercaseFirst}")
public class {$entityName}Controller {

  @Autowired
  private {$entityName}Service {$entityNameLowercaseFirst}Service;

  @GetMapping("/all")
  public List<{$entityName}> getAll() {
    return {$entityNameLowercaseFirst}Service.getAll();
  }

  @GetMapping("{% include java_spring_component_id_parameters_url %}")
  public {$entityName} get({% include java_spring_component_id_parameters_function %}) {
    {% if ($idComposite) %}
    return {$entityNameLowercaseFirst}Service.get(new {$entityName}Id({% include java_spring_component_id_parameters %})).orElse(null);
    {% else %}
    return {$entityNameLowercaseFirst}Service.get({% include java_spring_component_id_parameters %}).orElse(null);
    {% endif %}
  }

  @PostMapping
  public Map<String, Object> add(@Valid @RequestBody {$entityName} {$entityNameLowercaseFirst}) throws Exception {
    {$entityNameLowercaseFirst}Service.add({$entityNameLowercaseFirst});
    return Map.of("success", true);
  }

  @PutMapping
  public Map<String, Object> update(@Valid @RequestBody {$entityName} {$entityNameLowercaseFirst}) throws Exception {
    {$entityNameLowercaseFirst}Service.update({$entityNameLowercaseFirst});
    return Map.of("success", true);
  }

  @DeleteMapping("{% include java_spring_component_id_parameters_url %}")
  public Map<String, Object> remove({% include java_spring_component_id_parameters_function %}) throws Exception {
    {% if ($idComposite) %}
    {$entityNameLowercaseFirst}Service.delete(new {$entityName}Id({% include java_spring_component_id_parameters %}));
    {% else %}
    {$entityNameLowercaseFirst}Service.delete({% include java_spring_component_id_parameters %});
    {% endif %}
    return Map.of("success", true);
  }
}
