package {$root_namespace}.service;

import {$root_namespace}.entity.{$entity_name};
import {$root_namespace}.repository.{$entity_name}Repository;
{% if ($id_composite == true) %}
import {$root_namespace}.entity.{$entity_name}Id;
{% endif %}
{% include java_spring_component_extra_import %}
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
public class {$entity_name}Service {

  @Autowired
  private {$entity_name}Repository {$entity_name_lowercase_first}Repository;

  public List<{$entity_name}> getAll() {
    return (List<{$entity_name}>) {$entity_name_lowercase_first}Repository.findAll();
  }

  public Optional<{$entity_name}> get({$id_class} id) {
    return {$entity_name_lowercase_first}Repository.findById(id);
  }

  public void add({$entity_name} {$entity_name_lowercase_first}) throws Exception {
    validate({$entity_name_lowercase_first});
    {$entity_name_lowercase_first}Repository.save({$entity_name_lowercase_first});
  }

  public void update({$entity_name} {$entity_name_lowercase_first}) throws Exception {
    validate({$entity_name_lowercase_first});
    {$entity_name_lowercase_first}Repository.findById({$entity_name_lowercase_first}.get{$id_name}()).orElseThrow(() -> new Exception("{$entity_name} not found by id: " + {$entity_name_lowercase_first}.get{$id_name}()));
    {$entity_name_lowercase_first}Repository.save({$entity_name_lowercase_first});
  }

  public void delete({$id_class} id) throws Exception {
    {$entity_name_lowercase_first}Repository.findById(id).orElseThrow(() -> new Exception("{$entity_name} not found by id: " + id));
    {$entity_name_lowercase_first}Repository.deleteById(id);
  }

  private void validate({$entity_name} {$entity_name_lowercase_first}) throws Exception {
    {% loop in validation_rules as $validation %}
    if (!({$validation})) {
      throw new Exception("Unsatisfied validation rule: {$validation}");
    }
    {% onEmpty %}
    {% endloop }
  }
}
