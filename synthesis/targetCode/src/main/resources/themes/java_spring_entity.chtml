package {$rootNamespace}.entity;

{% if ($idComposite) %}
import {$rootNamespace}.entity.{$entityName}Id;
{% endif %}
{% include java_spring_component_extra_import %}
import com.fasterxml.jackson.annotation.JsonInclude;
import javax.persistence.*;
import javax.validation.constraints.*;
import java.util.StringJoiner;
{% endif %}

{% if ($compositeEntity) %}
@Embeddable
{% else %}
@Entity
@Table(name = "{$entityRealName}")
{% endif %}
@JsonInclude(JsonInclude.Include.NON_NULL)
public class {$entityName}{% if ($compositeEntity) %}Id{% endif %} {

  {% loop $attributes as $attribute %}
  {% include java_spring_component_annotation %}
  @{% if ($attribute.model.isForeign) %}Join{% endif %}Column(name = "{$attribute.model.columnName.value}")
  private {$attribute.type} {$attribute.nameLowercaseFirst}{% if ($attribute.value) %} = {$attribute.value}{% endif %};
  {% onEmpty %}
  {% endloop }

  {% loop $attributes as $attribute %}
  public {$attribute.type} get{$attribute.name}() {
    return {$attribute.nameLowercaseFirst};
  }

  public void set{$attribute.name}({$attribute.type} {$attribute.nameLowercaseFirst}) {
    this.{$attribute.nameLowercaseFirst} = {$attribute.nameLowercaseFirst};
  }
  {% onEmpty %}
  {% endloop %}

  @Override
  public String toString() {
    StringJoiner stringJoiner = new StringJoiner(", ");
    {% loop $attributes as $attribute %}
    stringJoiner.add("{$attribute.name}=" + {$attribute.nameLowercaseFirst});
    {% onEmpty %}
    {% endloop %}
    return "(" + stringJoiner.toString() + ")";
  }
}
