package {$root_namespace}.controller;

import {$root_namespace}.entity.{$entity_name};
import {$root_namespace}.service.{$entity_name}Service;
{% if ($id_composite == true) %}
import {$root_namespace}.entity.{$entity_name}Id;
{% endif %}
{% include java_spring_component_extra_import %}
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.validation.Valid;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/api/{$entity_name_lowercase_first}")
public class {$entity_name}Controller {

  @Autowired
  private {$entity_name}Service {$entity_name_lowercase_first}Service;

  @GetMapping("/all")
  public List<{$entity_name}> getAll() {
    return {$entity_name_lowercase_first}Service.getAll();
  }

  @GetMapping("{% include java_spring_component_id_parameters_url %}")
  public {$entity_name} get({% include java_spring_component_id_parameters_function %}) {
    {% if ($id_composite == true) %}
    return {$entity_name_lowercase_first}Service.get(new {$entity_name}Id({% include java_spring_component_id_parameters %})).orElse(null);
    {% else %}
    return {$entity_name_lowercase_first}Service.get({% include java_spring_component_id_parameters %}).orElse(null);
    {% endif %}
  }

  @PostMapping
  public Map<String, Object> add(@Valid @RequestBody {$entity_name} {$entity_name_lowercase_first}) throws Exception {
    {$entity_name_lowercase_first}Service.add({$entity_name_lowercase_first});
    return Map.of("success", true);
  }

  @PutMapping
  public Map<String, Object> update(@Valid @RequestBody {$entity_name} {$entity_name_lowercase_first}) throws Exception {
    {$entity_name_lowercase_first}Service.update({$entity_name_lowercase_first});
    return Map.of("success", true);
  }

  @DeleteMapping("{% include java_spring_component_id_parameters_url %}")
  public Map<String, Object> remove({% include java_spring_component_id_parameters_function %}) throws Exception {
    {% if ($id_composite == true) %}
    {$entity_name_lowercase_first}Service.delete(new {$entity_name}Id({% include java_spring_component_id_parameters %}));
    {% else %}
    {$entity_name_lowercase_first}Service.delete({% include java_spring_component_id_parameters %});
    {% endif %}
    return Map.of("success", true);
  }
}
